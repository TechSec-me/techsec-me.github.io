<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TechSec.me (Posts about sysadmin)</title><link>https://techsec.me/</link><description></description><atom:link href="https://techsec.me/categories/sysadmin.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2020 &lt;a href="mailto:info@techsec.me"&gt;TechSec&lt;/a&gt; </copyright><lastBuildDate>Sun, 22 Mar 2020 22:31:29 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>run nebula as a service</title><link>https://techsec.me/home/run-nebula-as-a-service/</link><dc:creator>TechSec</dc:creator><description>&lt;div&gt;&lt;h6&gt;I recently looked at using Nebula to create a private network between a few devices, &lt;a href="https://techsec.me/home/setting-up-nebula-overlay-network/" title="TechSec.me - Setting up Nebula"&gt;my post here&lt;/a&gt; goes through the setup process.  &lt;a href="https://github.com/slackhq/nebula" title="Nebula - GitHub Link"&gt;Nebula &lt;/a&gt; (from the people that brought you Slack) turned out to be a great fit for my requirement so below I'm detailing how to setup devices to automatically connect to the overlay network.  I will skip over the install as I covered that in my previous post.&lt;/h6&gt;
&lt;p&gt;&lt;strong&gt;Stage 1: Generate the certs for all devices&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dc-02 - 192.168.99.60 (VPS with WAN IP, Lighthouse)&lt;/li&gt;
&lt;li&gt;pc-01 - 192.168.99.61 (Local VM on NAT)&lt;/li&gt;
&lt;li&gt;pc-02 - 192.168.99.62 (Local VM on NAT)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://techsec.me/home/run-nebula-as-a-service/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>nebula</category><category>networking</category><category>sysadmin</category><category>vpn</category><guid>https://techsec.me/home/run-nebula-as-a-service/</guid><pubDate>Fri, 20 Mar 2020 20:30:33 GMT</pubDate></item><item><title>setting up nebula overlay network</title><link>https://techsec.me/home/setting-up-nebula-overlay-network/</link><dc:creator>TechSec</dc:creator><description>&lt;div&gt;&lt;h6&gt;I really like WireGuard as a fast, simple and secure VPN option.  Recently I have a requirement to be able to add and remove nodes to a VPN on a semi regular basis and as I do not have any sort of config manager in place (yet!) I need an option that doesn't require making changes on all existing nodes.  Nebula (from the people that brought you Slack) is one such option and below is how I've set it up, it's great in that I can add a node, do the bit of work I need to do with it then remove it a few weeks later and I don't need to make config changes on all the other nodes.&lt;/h6&gt;
&lt;p&gt;&lt;strong&gt;Stage 1: Setup Nebula&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/slackhq/nebula" title="Nebula - GitHub Link"&gt;Nebula is provided as source&lt;/a&gt; or as &lt;a href="https://github.com/slackhq/nebula/releases" title="Nebula - Binaries"&gt;downloadable binaries&lt;/a&gt;, there is no pre-built package or installer yet so for the initial setup I'll be configuring three nodes, a Linux VM with a public IP (Nebula refer to this as a Lighthouse) and two internal VMs behind NAT, one Windows Server at home and a Linux VM on a laptop.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;srv1 - 192.168.99.100 (VPS with WAN IP, Lighthouse)&lt;/li&gt;
&lt;li&gt;ka-01 - 192.168.99.101 (Local VM on NAT)&lt;/li&gt;
&lt;li&gt;dc-01 - 192.168.99.150 (Local VM on NAT)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://techsec.me/home/setting-up-nebula-overlay-network/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>nebula</category><category>networking</category><category>sysadmin</category><category>vpn</category><guid>https://techsec.me/home/setting-up-nebula-overlay-network/</guid><pubDate>Thu, 05 Mar 2020 21:05:21 GMT</pubDate></item><item><title>zabbix 4 server installation</title><link>https://techsec.me/home/zabbix-4-server-installation/</link><dc:creator>TechSec</dc:creator><description>&lt;div&gt;&lt;h6&gt;Zabbix is a great monitoring solution and is ideal for environments where you might not be adding devices all that often such as SMEs.  What I mean by this is it's simple to add devices via the GUI, where as with a solution like Nagios with it's config file management it can be a bit time consuming especially if you don't interact with the config on a regular basis.&lt;/h6&gt;
&lt;p&gt;I plan to do a few quick guides around Zabbix, my aim is to install it and configure it to monitor a few servers and services I have running so each quick guide will build on top of the other.  First up is the install procedure, I'm using a Ubuntu 19.10 Server VM as the OS (40GB disk, 2GB RAM, 1vCPU).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Stage 1: System Install.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Starting with a clean install of Ubuntu 19.10 and ran updates we can then look at the Zabbix &lt;a href="https://www.zabbix.com/documentation/current/manual/installation/requirements" title="Zabbix system requirements"&gt;system requirements&lt;/a&gt;.  Current version at time of writing is 4.4 and I'll install with MariaDB and Apache.&lt;/p&gt;
&lt;p&gt;Install MariaDB and configure:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;sudo apt install mariadb-server
sudo systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; mariadb
sudo systemctl start mariadb

&lt;span class="c1"&gt;# We run this to set a root password and remove root remote access etc.&lt;/span&gt;
sudo mysql_secure_installation
&lt;/pre&gt;


&lt;p&gt;&lt;a href="https://techsec.me/home/zabbix-4-server-installation/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><category>monitoring</category><category>sysadmin</category><category>zabbix</category><guid>https://techsec.me/home/zabbix-4-server-installation/</guid><pubDate>Sun, 01 Mar 2020 22:03:44 GMT</pubDate></item><item><title>extend volume to new physical disk with lvm</title><link>https://techsec.me/home/extend-volume-to-new-physical-disk-with-lvm/</link><dc:creator>TechSec</dc:creator><description>&lt;div&gt;&lt;h6&gt;The initial OS was installed using LVM so extending it is relativly straight forward.  The steps below describe the process, here the Ubuntu server / was running low on space.  I added a new disk and extended the existing volume to use the new disk increasing the free space on root /&lt;/h6&gt;
&lt;p&gt;&lt;img alt="" src="https://techsec.me/home/extend-volume-to-new-physical-disk-with-lvm/lvm8.png"&gt;&lt;/p&gt;
&lt;p&gt;Example image above shows an initial storage configuration on the left.  The right shows additional storage added later and used to extend existing volume.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://techsec.me/home/extend-volume-to-new-physical-disk-with-lvm/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>bash</category><category>linux</category><category>storage</category><category>sysadmin</category><guid>https://techsec.me/home/extend-volume-to-new-physical-disk-with-lvm/</guid><pubDate>Thu, 06 Feb 2020 21:59:02 GMT</pubDate></item></channel></rss>