<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TechSec.me (Posts about linux)</title><link>https://techsec.me/</link><description></description><atom:link href="https://techsec.me/categories/linux.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2020 &lt;a href="mailto:info@techsec.me"&gt;TechSec&lt;/a&gt; </copyright><lastBuildDate>Tue, 10 Mar 2020 14:06:36 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>zabbix 4 server installation</title><link>https://techsec.me/home/zabbix-4-server-installation/</link><dc:creator>TechSec</dc:creator><description>&lt;div&gt;&lt;h6&gt;Zabbix is a great monitoring solution and is ideal for environments where you might not be adding devices all that often such as SMEs.  What I mean by this is it's simple to add devices via the GUI, where as with a solution like Nagios with it's config file management it can be a bit time consuming especially if you don't interact with the config on a regular basis.&lt;/h6&gt;
&lt;p&gt;I plan to do a few quick guides around Zabbix, my aim is to install it and configure it to monitor a few servers and services I have running so each quick guide will build on top of the other.  First up is the install procedure, I'm using a Ubuntu 19.10 Server VM as the OS (40GB disk, 2GB RAM, 1vCPU).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Stage 1: System Install.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Starting with a clean install of Ubuntu 19.10 and ran updates we can then look at the Zabbix &lt;a href="https://www.zabbix.com/documentation/current/manual/installation/requirements" title="Zabbix system requirements"&gt;system requirements&lt;/a&gt;.  Current version at time of writing is 4.4 and I'll install with MariaDB and Apache.&lt;/p&gt;
&lt;p&gt;Install MariaDB and configure:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;sudo apt install mariadb-server
sudo systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; mariadb
sudo systemctl start mariadb

&lt;span class="c1"&gt;# We run this to set a root password and remove root remote access etc.&lt;/span&gt;
sudo mysql_secure_installation
&lt;/pre&gt;


&lt;p&gt;&lt;a href="https://techsec.me/home/zabbix-4-server-installation/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><category>monitoring</category><category>sysadmin</category><category>zabbix</category><guid>https://techsec.me/home/zabbix-4-server-installation/</guid><pubDate>Sun, 01 Mar 2020 22:03:44 GMT</pubDate></item><item><title>setup wireguard vpn</title><link>https://techsec.me/home/setup-wireguard-vpn/</link><dc:creator>TechSec</dc:creator><description>&lt;div&gt;&lt;h6&gt;WireGuard is a fast, easy to configure VPN.  If you have at least one node with a public IP all devices will be able to communicate with each other regardless of NAT or port forwards.  The setup below has three nodes, one VPS node with a public IP and two additional nodes, both behind NAT.&lt;/h6&gt;
&lt;p&gt;&lt;img alt="" src="https://techsec.me/home/setup-wireguard-vpn/wg00.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Stage 1: Install WireGuard on our clients.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I'm not going to re-produce the install procedure, WireGuard have very good documentation &lt;a href="https://www.wireguard.com/install/" title="WireGuard Install Guide"&gt;available here&lt;/a&gt;.  I installed on three systems, two Ubuntu 19.10 Servers and one CentOS 8.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ubnt-01 (Local VM)&lt;/li&gt;
&lt;li&gt;ubnt-02 (VPS with WAN IP)&lt;/li&gt;
&lt;li&gt;cent-01 (Local VM)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once installed you can run &lt;code&gt;sudo wg&lt;/code&gt; to check if it's installed, you will get an error if it's not.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://techsec.me/home/setup-wireguard-vpn/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><category>security</category><category>vpn</category><category>wireguard</category><guid>https://techsec.me/home/setup-wireguard-vpn/</guid><pubDate>Tue, 11 Feb 2020 22:01:42 GMT</pubDate></item><item><title>extend volume to new physical disk with lvm</title><link>https://techsec.me/home/extend-volume-to-new-physical-disk-with-lvm/</link><dc:creator>TechSec</dc:creator><description>&lt;div&gt;&lt;h6&gt;The initial OS was installed using LVM so extending it is relativly straight forward.  The steps below describe the process, here the Ubuntu server / was running low on space.  I added a new disk and extended the existing volume to use the new disk increasing the free space on root /&lt;/h6&gt;
&lt;p&gt;&lt;img alt="" src="https://techsec.me/home/extend-volume-to-new-physical-disk-with-lvm/lvm8.png"&gt;&lt;/p&gt;
&lt;p&gt;Example image above shows an initial storage configuration on the left.  The right shows additional storage added later and used to extend existing volume.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://techsec.me/home/extend-volume-to-new-physical-disk-with-lvm/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>bash</category><category>linux</category><category>storage</category><category>sysadmin</category><guid>https://techsec.me/home/extend-volume-to-new-physical-disk-with-lvm/</guid><pubDate>Thu, 06 Feb 2020 21:59:02 GMT</pubDate></item><item><title>secure ssh access using keys</title><link>https://techsec.me/home/secure-ssh-access-using-keys/</link><dc:creator>TechSec</dc:creator><description>&lt;div&gt;&lt;h6&gt;In order to secure SSH access to a newly deployed Linux server it is highly recommended you disable password based SSH logins and instead force key based logins as it practically eliminates the possibility of a brute force login attack being successful.  There are a few steps to setting this up which I go through below.&lt;/h6&gt;
&lt;p&gt;&lt;strong&gt;Stage 1: Account Setup&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We're assuming the only account on first boot is root so first thing we need to do is create a new user for remote access and give it sudo privileges.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;useradd -m srvadmin
passwd srvadmin
usermod -a -G sudo srvadmin
&lt;/pre&gt;


&lt;p&gt;&lt;img alt="" src="https://techsec.me/home/secure-ssh-access-using-keys/ssh1.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://techsec.me/home/secure-ssh-access-using-keys/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><category>security</category><category>ssh</category><guid>https://techsec.me/home/secure-ssh-access-using-keys/</guid><pubDate>Thu, 30 Jan 2020 22:00:32 GMT</pubDate></item><item><title>apache ssl using a windows ca</title><link>https://techsec.me/home/apache-ssl-using-a-windows-ca/</link><dc:creator>TechSec</dc:creator><description>&lt;div&gt;&lt;h6&gt;If you've a Windows Domain with a Certificate Authority in place, this procedure will demonstrate how to issue an SSL certificate for an internal Apache server running Linux, CentOS in this case.  In the example below we enable https on an intranet.&lt;/h6&gt;
&lt;p&gt;&lt;strong&gt;Stage 1: Generating a CSR for your virtual host.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First we generate a key and certificate request for our intranet using openssl on the Linux server.  We can later copy the resulting .csr to our Windows CA to generate the certificate from.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;sudo mkdir /etc/httpd/ssl
&lt;span class="nb"&gt;cd&lt;/span&gt; /etc/httpd/ssl
sudo openssl req -newkey rsa:2048 -nodes -keyout intranet.int.techsec.me.key -out intranet.int.techsec.me.csr
&lt;/pre&gt;


&lt;p&gt;&lt;img alt="" src="https://techsec.me/home/apache-ssl-using-a-windows-ca/ssl-ca1.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://techsec.me/home/apache-ssl-using-a-windows-ca/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><category>security</category><category>web</category><category>windows server</category><guid>https://techsec.me/home/apache-ssl-using-a-windows-ca/</guid><pubDate>Sat, 25 Jan 2020 22:00:12 GMT</pubDate></item></channel></rss>